image: mcr.microsoft.com/dotnet/sdk:8.0

stages: [build, test]

variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: "1"
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
  # NuGet-cache in de repo, zodat caching werkt
  NUGET_PACKAGES: "$CI_PROJECT_DIR/.nuget/packages"

  BUILD_CONFIGURATION: "Release"
  TEST_RESULTS_FILE: "test-results.xml"
  COVERAGE_DIR: "coverage"
  COVERAGE_FILE: "coverage/coverage.cobertura.xml"

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .nuget/packages/
  policy: pull-push

before_script:
  # ⛔️ geen -c hier; restore heeft geen configuration
  - dotnet restore EventManager.sln

build:
  stage: build
  script:
    - dotnet build EventManager.sln --no-restore -c $BUILD_CONFIGURATION
  artifacts:
    expire_in: 1 day
    paths:
      - ./**/bin/
      - ./**/obj/

test:
  stage: test
  needs: ["build"]
  script:
    - dotnet test EventManager.sln --no-build -c $BUILD_CONFIGURATION \
      --logger "junit;LogFilePath=$TEST_RESULTS_FILE;MethodFormat=Class;FailureBodyFormat=Verbose" \
      --collect:"XPlat Code Coverage" \
      --results-directory $COVERAGE_DIR

    # Zet 1 vast Cobertura-bestand voor GitLab
    - COVERAGE_XML=$(find "$COVERAGE_DIR" -type f -name "coverage.cobertura.xml" | head -n 1)
    - test -f "$COVERAGE_XML" || (echo "Coverage file not found!" && exit 1)
    - mkdir -p "$(dirname "$COVERAGE_FILE")"
    - cp "$COVERAGE_XML" "$COVERAGE_FILE"

    # HTML coverage rapport
    - dotnet tool install -g dotnet-reportgenerator-globaltool
    - export PATH="$PATH:/root/.dotnet/tools"
    - reportgenerator -reports:"$COVERAGE_FILE" -targetdir:"coveragereport" -reporttypes:Html

    # Coverage % in joblog (voor 'coverage:' regex)
    - echo "TOTAL_COVERAGE=$(grep -oPm1 'line-rate=\"\\K[0-9.]+' "$COVERAGE_FILE" | awk '{printf \"%.2f\", $1*100}')%"

  coverage: '/TOTAL_COVERAGE=(\d+\.\d+)%/'
  artifacts:
    expire_in: 1 week
    paths:
      - coveragereport/
    reports:
      junit: $TEST_RESULTS_FILE
      coverage_report:
        coverage_format: cobertura
        path: $COVERAGE_FILE
