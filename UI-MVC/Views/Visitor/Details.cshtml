@model EM.BL.Domain.Visitor

@{
    ViewData["Title"] = "Visitor Details";
}

<h1>Visitor Details</h1>

<div>
    <dl class="row">
        <dt class="col-sm-2">Name</dt>
        <dd class="col-sm-10">@Model.FirstName @Model.LastName</dd>

        <dt class="col-sm-2">Email</dt>
        <dd class="col-sm-10">@Model.Email</dd>

        <dt class="col-sm-2">Phone</dt>
        <dd class="col-sm-10">@Model.PhoneNumber</dd>

        <dt class="col-sm-2">City</dt>
        <dd class="col-sm-10">@Model.City</dd>
    </dl>
</div>

<h3>Events</h3>
<table id="eventTable" class="table table-striped">
    <thead>
        <tr>
            <th>Event Name</th>
            <th>Date</th>
            <th>Category</th>
            <th>Ticket Price</th>
        </tr>
    </thead>
    <tbody>
        <!-- JavaScript vult deze tabel dynamisch -->
    </tbody>
</table>

<input type="hidden" id="visitorId" value="@Model.VisitorId" />

<h3>Add Event</h3>
<form id="addEventForm" class="mb-4">
    <div class="form-group">
        <label for="eventSelect">Select Event</label>
        <select id="eventSelect" class="form-control">
            <!-- JavaScript vult deze lijst dynamisch -->
        </select>
    </div>
    <div class="form-group">
        <label for="paymentMethod">Payment Method</label>
        <select id="paymentMethod" class="form-control">
            <option value="Online">Online</option><!-- TODO: dynamisch maken-->
            <option value="AtTheDoor">At The Door</option>
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Add Event to Visitor</button>
</form>


@section Scripts {
    <script>
        async function fetchEventsForVisitor(visitorId) {
            const response = await fetch(`/api/Visitors/${visitorId}/Events`);
            if (response.ok) {
                const events = await response.json();
                const tableBody = document.getElementById('eventTable').querySelector('tbody');
                tableBody.innerHTML = ''; // Maak de tabel leeg voordat je nieuwe data toevoegt

                events.forEach(event => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${event.eventName}</td>
                        <td>${new Date(event.eventDate).toLocaleDateString()}</td>
                        <td>${event.category}</td>
                        <td>${event.ticketPrice ? `â‚¬${event.ticketPrice.toFixed(2)}` : "Free"}</td>
                    `;
                    tableBody.appendChild(row);
                });
            } else {
                console.error('Failed to fetch events for the visitor.');
            }
        }
        
        async function fetchAvailableEvents(visitorId) {
            const response = await fetch(`/api/Visitors/${visitorId}/AvailableEvents`);
            if (response.ok) {
                const events = await response.json();
                const eventSelect = document.getElementById("eventSelect");
                eventSelect.innerHTML = ""; // Leeg de select-box

                events.forEach(event => {
                    const option = document.createElement("option");
                    option.value = event.eventId;
                    option.textContent = `${event.eventName} (${new Date(event.eventDate).toLocaleDateString()})`;
                    eventSelect.appendChild(option);
                });
            } else {
                console.error("Failed to fetch available events.");
            }
        }
        
        document.addEventListener('DOMContentLoaded', () => {
            const visitorId = document.getElementById('visitorId').value;
            fetchEventsForVisitor(visitorId);
            fetchAvailableEvents(visitorId);
        });

        document.getElementById("addEventForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const visitorId = document.getElementById("visitorId").value; // Zorg dat je visitorId hebt
            const eventId = document.getElementById("eventSelect").value;
            const paymentMethod = document.getElementById("paymentMethod").value;

            const payload = {
                eventId: eventId,
                visitorId: visitorId,
                paymentMethod: paymentMethod // Enum: "Online" of "AtTheDoor"
            };

            const response = await fetch("/api/Tickets", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(payload)
            });

            if (response.ok) {
                console.log("Event added successfully.");
                fetchEventsForVisitor(visitorId); // Ververs de tabel
                fetchAvailableEvents(visitorId); // Ververs de select-box
            } else {
                console.error("Failed to add event.");
            }
});

    </script>
    
    
}


